Capitulo 15

1.

(display "Hello World")
(define pi 3.1416)
(define potencia (lambda (B E)
 (cond((= E 0) 1)
 ((= E 1) B)
 (else (* B (potencia B (- E 1))))))
)
(define circle-vol (lambda (radius) (/ (* 4 (* pi (potencia radius 3))) 3)))
(circle-vol 3)
(newline)

2.

(define (solve-quadratic-equation a b c)
  (define disc (sqrt (- (* b b)
                        (* 4.0 a c))))
  (/ (+ (- b) disc)
     (* 2.0 a)))
	 
3.


4.

(define (power A B)
  (expt A B))
  
5.

(define (count lst)
  (foldr (lambda (element count)
          (if (0? element) (+ count 1) count))
		  0 lst))



Capitulo 16

1.  
 
mother(X,Y) :- parent(X,Y), female(X).
 
 
2.
 
sibling(X,Y) :- parent(M,X), parent(M,Y), not(X = Y).
sister(X,Y) :- sibling(X,Y), female(X).
 
 
3. 
 
maximum_number([X],X).
maximum_number([X|Y],X):- maximum_number(Y,Z), X >= Z.
maximum_number([X|Y],N):- maximum_number(Y,N), N > X.


4.

intersection_empty([X],[Y]).
intersection_empty(X,Y):-intersection(X,Y,[]).


5.

union_list([],X,X).
union_list([X|Y],Z,W):- member(X,Z),!,union_list(Y,Z,W).
union_list([X|Y],Z,[X|W]):- union_list(Y,Z,W).

 
6.

final(X,[X]).
final(X,[Y|Z]):- final(X,Z).


7.

quicksort([],[]).
quicksort(X|Tail,Sorted):- split(X,Tail,Small,Big), quicksort(Small,SortedSmall), quicksort(Big,SortedBig),append(SortedSmall,[X|SortedBig], Sorted).
split(_X, [], [],[]).
split(X,[Y|Tail],Big):- X >= Y, split(X,Tail,Small,Big).
split(X,[Y|Tail],Small,Y|Big]:- X < Y, split(X,Tail,Small,Big).
